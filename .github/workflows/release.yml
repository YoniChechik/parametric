name: Release

# NOTE: this action ONLY happens on merged PR from the manual_release_pr
on:
  pull_request:
    types: [closed]

jobs:
  build-and-publish:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Bump version to')
 
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      # both below are mandatory for pypi publishing
      name: release
      url: https://pypi.org/p/parametric
    permissions:
      # this permission is mandatory for trusted publishing in pypi
      id-token: write 
      # Give the default GITHUB_TOKEN write permission to commit and push changes.
      # Used by both softprops/action-gh-release@v2
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' 

      - name: Install dependencies
        # build and twine for "build package" step
        run: |
          python -m pip install --upgrade pip
          pip install build twine
 
      - name: Get Version From pyproject.toml
        id: get_new_version
        run: |
          echo "new_version=$(grep -Po '(?<=version = ")[^"]*' pyproject.toml)" >> $GITHUB_OUTPUT

      - name: Build package
        run: python -m build

      - name: Extract Release Notes
        id: extract_notes
        run: |
            counter=0
            release_notes=""
            while IFS= read -r line; do
              if [[ $line =~ ^##\  ]]; then
                ((counter++))
              fi
              if [[ $counter -lt 2 ]]; then
                release_notes="${release_notes}${line}\n"
              else
                break
              fi
            done < CHANGELOG.md

            # Safely handle multi-line output for GITHUB_OUTPUT
            release_notes_escaped=$(echo -e "$release_notes" | awk '{printf "%s\\n", $0}')
            echo "release_notes=$release_notes_escaped" >> $GITHUB_OUTPUT
      
      - name: Release and Tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.get_new_version.outputs.new_version }}"
          body: "${{ steps.extract_notes.outputs.release_notes }}"
          files: dist/*.whl
            
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
