name: Upload release to PyPI

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/parametric
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  # Specify the Python version to use

      - name: Install dependencies
        run: pip install build twine

      - name: Update version
        id: update_version
        run: |
          version=$(python -c "from toml import load; print(load(open('pyproject.toml'))['project']['version'])")
          new_version=$(python -c "from semver import VersionInfo; print(VersionInfo.parse('${{ inputs.release_type }}')('${{ github.event.inputs.release_type }}'))")
          echo "Current version: $version"
          echo "New version: $new_version"
          sed -i "s/version = \"$version\"/version = \"$new_version\"/" pyproject.toml
          echo "::set-output name=new_version::$new_version"

      - name: Commit version change
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git commit -am "Bump version to ${{ steps.update_version.outputs.new_version }}"
          git push

      - name: Build package
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
