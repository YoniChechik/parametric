name: Manual Release PR
# NOTE: automatic commits/ pr of github bots will NOT dispatch any other actions afterwards

# NOTE: github bot can't push files to main if the branch is protected, so we split the release phase to:
# 1. a manual step that changes files and does a PR of a new branch.
# 2. after PR is approved manually the actual release step is done
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-release-pr:
    name: Build Release PR
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push changes.
      pull-requests: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history so that git log works correctly

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --dev

      - name: Update files for release
        id: update_files
        run: |
          new_version=$(uv run .github/workflows/manual_release_pr_update_files.py ${{ github.event.inputs.release_type }})
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

      # ===== test the package
      # - name: Build package
      #   run: uv build

      # - name: Install built package
      #   run: |
      #     pip install pytest dist/*.whl

      # - name: Run tests
      #   run: |
      #     # move the src dir so tests will run on package
      #     mv /home/runner/work/parametric/parametric/parametric/ /home/runner/work/parametric/parametric/parametric_backup/
      #     # ignore existing configuration file and run only the tests dir with the installed package and not the src dir from the repo
      #     PYTHONPATH=/home/runner/work/parametric/parametric pytest -c /dev/null --rootdir /home/runner/work/parametric/parametric
      #     mv /home/runner/work/parametric/parametric/parametric_backup/ /home/runner/work/parametric/parametric/parametric/

      - name: Create a Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: version-update-${{ github.event.inputs.release_type }}
          title: "Bump version to ${{ steps.update_files.outputs.new_version }}"
          body: "Bump version to ${{ steps.update_files.outputs.new_version }}"
          commit-message: "Bump version to ${{ steps.update_files.outputs.new_version }}"
